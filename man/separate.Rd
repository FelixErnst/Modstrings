% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Modstrings-separate.R
\docType{methods}
\name{separate}
\alias{separate}
\alias{combineIntoModstrings}
\alias{separate,ModString-method}
\alias{separate,ModStringSet-method}
\alias{combineIntoModstrings,XString,GRanges-method}
\alias{combineIntoModstrings,XStringSet,GRangesList-method}
\alias{combineIntoModstrings,XStringSet,GRanges-method}
\title{Separating and combining a ModString object into/from a XString and a 
GRanges object}
\usage{
separate(x, nc.type = "short")

combineIntoModstrings(x, gr, with.qualities = FALSE,
  quality.type = "Phred", verbose = FALSE, ...)

\S4method{separate}{ModString}(x, nc.type = c("short", "nc"))

\S4method{separate}{ModStringSet}(x, nc.type = c("short", "nc"))

\S4method{combineIntoModstrings}{XString,GRanges}(x, gr,
  with.qualities = FALSE, quality.type = "Phred", verbose = FALSE,
  ...)

\S4method{combineIntoModstrings}{XStringSet,GRangesList}(x, gr,
  with.qualities = FALSE, quality.type = "Phred", verbose = FALSE,
  ...)

\S4method{combineIntoModstrings}{XStringSet,GRanges}(x, gr,
  with.qualities = FALSE, quality.type = "Phred", verbose = FALSE,
  ...)
}
\arguments{
\item{x}{For \code{separate}: a \code{ModString} or \code{ModStringSet}
object

For \code{combineIntoModstrings}: a \code{XStringSet} and a \code{GRanges} 
object.}

\item{nc.type}{the type of nomenclature to be used. Either "short" or "nc".
"Short" for m3C would be "m3C", "nc" for m3C would be "3C". (
\code{default = "short"})}

\item{gr}{a GRanges object}

\item{with.qualities}{\code{TRUE} or \code{FALSE} (default): Should the 
values from a \code{score} column of the \code{GRanges} object stored? If
set \code{with.qualities = TRUE}, \code{combineIntoModstrings} will try to
construct a \code{\link{QualityScaledModStringSet}} object.}

\item{quality.type}{the type of \code{QualityXStringSet} used, if 
\code{with.qualities = TRUE}. Must be on of the following values: 
\code{"Phred","Solexa","Illumina"}.}

\item{verbose}{For \code{combineIntoModstrings}: \code{TRUE} or \code{FALSE}
(default): Should verbose information reported on the positions filled with 
modifications? This settings is passed onto \code{\link{modifyNucleotides}}.}

\item{...}{For \code{combineIntoModstrings}: the \code{default.quality}
default value for non-modified positions.}
}
\value{
for \code{separate} a \code{GRanges} object and for 
\code{combineIntoModstrings} a \code{ModString*} object or a 
\code{QualityScaledModStringSet}, if \code{with.qualities = TRUE}.
}
\description{
With \code{combineIntoModstrings} and \code{separate} the construction and 
deconstruction of ModString Objects from an interacive session avoiding 
problematic encoding issues. In addition, modification information can be 
transfered from/to tabular data with these functions.

\code{combineIntoModstrings} expects \code{seqnames(gr)} or \code{names(gr)} 
to match the available \code{names(x)}. Only information with strand 
information \code{*} and \code{+} are used.
}
\examples{
seq <- ModDNAString(paste(alphabet(ModDNAString()), collapse = ""))
gr <- separate(seq)
seq <- combineIntoModstrings(as(seq,"DNAString"),gr)
}
